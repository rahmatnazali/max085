Script Details:
-------------------------------------------------------
Clear cookies (logout)
Set Proxy to Next Proxy From Proxies.txt
Loading Login Page ...
Clicking On Username/Email Input -> Filling Next Username/Email ...
Clicking On Password Input -> Filling Next Password ...
If reCaptcha found -> Solving reCaptcha ...
Clicking on Login Button ...	

If User is logged in
	While( UC < URLsCount  )

			Loading URL (1/#) from URLs.txt ...

			Loop: 
				if XPath (1/#) found on page -> click it to download the file and save it Files Directory
				Add Result Description FilesLog.txt
			Exit Loop

			Add Result Description URLsLog.txt
			UC+=1
			
	Exit Loop
	
	If( UC == URLsCount )
		Exectute Lines 3 to 9
		UC=0
		Go to Line 11 and repeat process untill there is no accounts left
	End If
	
End If

Configuaration:
-------------------------------------------------------
Login Page: 			   example: https://example.com/login
Usernames/Email:passwords: example: user12:pass12 , user34:pass34 , user56:pass56

Username/Email XPath:	   example: //*[@id="user"]
Password XPath:			   example: //*[@id="pass"]
Recaptha XPath:			   example: //*[@id="recaptcha-anchor"]/div[1]
Login Button XPath:		   example: //*[@id="login"]

Files XPaths:    		   example: "/html/body/div[1]/div/div/a" , "//*[@id="Download"]" , "//*[@id="button"]"
Save Files Directory:      example: "C:\Script\Zipfiles" , default ("./Files")

Show Browser Window		   example: True -> show , False -> headless

Intervals between Files:   example: 10 ( this is a custom intervals in seconds between each XPath download button click )
Intervals between URLs:    example: 10 ( this is a custom intervals in seconds to move from each URL to the next )
URLs Count to Switch:	   example: 20 ( every # of URLS completed, clear cookies (logout), set next custom proxy, login(different account), continue )
Use Proxies:			   example: True or False

reCaptcha Option:		   example: 1 -> Show captcha in browser window and prompt the user to solve it , 2 -> anti-captcha.com service
anti-captcha.com API:	   example: dce6bcbb1a728ea8d563de6d169a2057



Notes:
-------------------------------------------------------
* CSS selectors -> no longer needed , XPath is enough
* There are 1 or more XPaths set in Configuaration, if XPath found on page -> click it to download the file
* When the XPath have multiple results not just 1 when they are multiple /a in the URL page content for example, it will click and download every one.
* User agent is set to Google Chrome Or Firefox by default
* You don't have to follow Script Details ( Lines From # to # ), it's just for you to check and know the requirements needed in this script
 
 
General Notes For Feature 1 & 2:
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
* After each step is executed, it creates a log file containing any errors, for example: unable to scrape or find XPath or unable to load HTML, ....

* For URLs.txt in Feature 1 or 2 , when the script finish a URL it removes it from URLs.txt and Add it to URLsDone.txt when successful or URLsError.txt when error, this is for in case the script shuts suddenly, when it runs again it will continue and not repeat already done URLs

* I would appreciate it if you documented your code with comments, thanks. 
